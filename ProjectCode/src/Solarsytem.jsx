/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.2.13 solarsytem.glb 
*/

import React, { useRef } from 'react'
import { useGLTF, useAnimations, Stars } from '@react-three/drei'
import { RigidBody } from '@react-three/rapier'
import { useSharedState } from './sharedState';
import { PresentationControls } from '@react-three/drei';

export function SolarSystem(props) {
  const { setText, setDesc } = useSharedState();

  function clear() {
    setText('');
    setDesc('');
  }

  function mercuryCLick() {
    setDesc("The smallest planet in our solar system and nearest to the Sun, Mercury is only slightly larger than Earth's Moon. From the surface of Mercury, the Sun would appear more than three times as large as it does when viewed from Earth, and the sunlight would be as much as seven times brighter.");
  }
  function sunClick() {
    setDesc("The sun is a prominent star at the center of our solar system, providing Earth with light, heat, and energy essential for life. It is a nearly perfect sphere of hot plasma, primarily composed of hydrogen and helium. The sun's energy powers weather patterns, photosynthesis, and most ecosystems on Earth.");
  }
  function venusCLick(){
    setDesc("Venus is the second planet from the sun, known as Earth's sister due to their similar size and composition. It has a thick atmosphere primarily of carbon dioxide, causing a runaway greenhouse effect, making it the hottest planet in our solar system. Venus is shrouded in clouds and exhibits a strong greenhouse effect, trapping heat and leading to surface temperatures high enough to melt lead.");
  }
  function earthClick(){
    setDesc("Earth is the third planet from the sun and the only known celestial body to support life. It has a diverse environment with oceans, continents, and an atmosphere containing oxygen. Home to millions of species, including humans, Earth features intricate ecosystems, supporting a wide array of life forms. It orbits the sun, providing ideal conditions for life as we know it.");
  }
  function marsClick(){
    setDesc("Mars, often called the Red Planet, is the fourth planet from the sun in our solar system. It is characterized by its reddish appearance due to iron oxide on its surface. Mars has polar ice caps, canyons, and extinct volcanoes, sparking interest as a possible site for past life or future human exploration.");
  }
  function jupitorClick(){
    setDesc("Jupiter, the largest planet in our solar system, is a gas giant known for its immense size and iconic red spot, a massive storm. It has a strong magnetic field, numerous moons, and a banded appearance caused by powerful winds in its atmosphere. Jupiter plays a crucial role in shaping the solar system's dynamics.");
  }
  function saturnClick(){
    setDesc("Saturn, the sixth planet from the sun, is renowned for its stunning ring system, composed of icy particles and debris. It is a gas giant, primarily made of hydrogen and helium, with unique hexagonal cloud patterns in its atmosphere. Saturn has numerous moons, including Titan, the second-largest moon in the solar system, known for its thick atmosphere and methane lakes.");
  }
  function uranusClick(){
    setDesc("Uranus, the seventh planet from the sun, is an ice giant with a distinct feature: it rotates on its side, likely due to a massive ancient collision. It has a blue-green atmosphere, composed mostly of hydrogen, helium, and methane. Uranus also boasts a system of faint rings and a retinue of moons, the largest being Titania and Oberon.");
  }
  function neptuneClick(){
    setDesc("Neptune, the eighth and farthest planet from the sun, is an ice giant known for its deep blue color due to methane in its atmosphere. It has powerful winds and a colossal storm known as the Great Dark Spot. Neptune has a diverse moon system, including Triton, a unique moon with geysers erupting from its icy surface.");
  }
  function earthmoonCLick(){
    setDesc("Earth's moon, simply called the Moon, is the fifth-largest moon in the solar system and Earth's only natural satellite. It influences tides and stabilizes Earth's rotation. The Moon lacks atmosphere and water, with a barren, pockmarked surface. It has fascinated humans for centuries, playing a significant role in cultures, myths, and scientific exploration.");
  }

  const group = useRef()
  const { nodes, materials, animations } = useGLTF('/solarsytem.glb')
  const { actions } = useAnimations(animations, group)
  return (<>
  <color attach="background" args={["black"]} />
    <group ref={group} {...props} dispose={null} scale={4}>
      <Stars/>
      <group name="Scene">
        <group name="Sketchfab_model" position={[0, 5.157, 0]} rotation={[-1.472, 0.12, 0]} scale={0.164}>
          <group name="5ce69907e7be4b5a89c12dcbbc7d7108fbx" rotation={[Math.PI / 2, 0, 0]}>
            <group name="Object_2">
              <group name="RootNode">
                <group name="BezierCircle" position={[0.016, -0.873, 0.083]} rotation={[-Math.PI / 2, 0, 0]} scale={11.745}>
                  <RigidBody type="fixed">
                  <PresentationControls snap={true}>
                    <group name="Sphere_002" position={[1.005, -0.048, 0.072]} rotation={[0, 0, -0.062]} scale={0.062}>
                                           <mesh onPointerEnter={(e) => setText('Mercury')}
                        onPointerLeave={(e) => clear()}
                        onClick={(e) => mercuryCLick()}
                        name="Sphere_002_Material_005_0" geometry={nodes.Sphere_002_Material_005_0.geometry} material={materials.Material_005} />
                    </group>
                  </PresentationControls>
                  </RigidBody>
                </group>
                <group 
                  name="BezierCircle_001" position={[0.016, -0.873, 0.083]} rotation={[-Math.PI / 2, 0, 0]} scale={15.593}>
                    <RigidBody type="fixed">
                  <PresentationControls snap={true}>
                    <group name="Sphere_009" position={[0.634, 0.749, 0.072]} rotation={[0, 0, -0.031]} scale={0.076}>
                      <mesh name="Sphere_009_Material_006_0" 
                      onPointerEnter={(e) => setText('Venus')}
                      onPointerLeave={(e) => clear()}
                      onClick={(e) => venusCLick()} geometry={nodes.Sphere_009_Material_006_0.geometry} material={materials.Material_006} />
                    </group>
                  </PresentationControls>
                  </RigidBody>
                </group>
                <group name="BezierCircle_002" position={[0.016, -0.873, 0.083]} rotation={[-Math.PI / 2, 0, 0]} scale={21.574}>
                  <group name="Sphere_003" position={[-0.1, -0.988, 0.072]} rotation={[0, 0, -0.026]} scale={0.076}>
                    <group name="BezierCircle_003" rotation={[0, 0, 0.407]} scale={1.597}>
                    <RigidBody type="fixed">
                    <PresentationControls snap={true}>
                      <group name="Sphere_010" position={[0.743, -0.645, 0.056]} rotation={[0, 0, -1.739]} scale={0.11}>
                        <mesh name="Sphere_010_Material_011_0" 
                        onPointerEnter={(e) => setText('Earth Moon')}
                        onPointerLeave={(e) => clear()}
                        onClick={(e) => earthmoonCLick()} geometry={nodes.Sphere_010_Material_011_0.geometry} material={materials.Material_011} />
                      </group>
                      </PresentationControls>
                      </RigidBody>
                    </group>
                    <RigidBody type="fixed">
                    <PresentationControls snap={true}>
                    <mesh name="Sphere_003_Material_004_0" 
                    onPointerEnter={(e) => setText('Earth')}
                    onPointerLeave={(e) => clear()}
                    onClick={(e) => earthClick()} geometry={nodes.Sphere_003_Material_004_0.geometry} material={materials.Material_004} />
                    </PresentationControls>
                    </RigidBody>
                  </group>
                </group>
                <group name="BezierCircle_004" position={[0.016, -0.873, 0.083]} rotation={[-Math.PI / 2, 0, 0]} scale={29.634}>
                <RigidBody type="fixed">
                <PresentationControls snap={true}>
                  <group name="Sphere" position={[-0.543, 0.835, 0.028]} rotation={[0, 0, 2.141]} scale={0.055}>
                    <mesh name="Sphere_Material_003_0" 
                    onPointerEnter={(e) => setText('Mars')}
                    onPointerLeave={(e) => clear()}
                    onClick={(e) => marsClick()} geometry={nodes.Sphere_Material_003_0.geometry} material={materials.Material_003} />
                  </group>
                  </PresentationControls>
                  </RigidBody>
                </group>
                <group name="BezierCircle_005" position={[0.016, -0.873, 0.083]} rotation={[-Math.PI / 2, 0, 0]} scale={41.142}>
                <RigidBody type="fixed">
                <PresentationControls snap={true}>
                  <group name="Sphere_005" position={[0.491, -0.863, 0.021]} rotation={[0, 0, 0.051]} scale={0.066}>
                    <mesh name="Sphere_005_Material_007_0" 
                    onPointerEnter={(e) => setText('Jupiter')}
                    onPointerLeave={(e) => clear()}
                    onClick={(e) => jupitorClick()} geometry={nodes.Sphere_005_Material_007_0.geometry} material={materials.Material_007} />
                  </group>
                  </PresentationControls>
                  </RigidBody>
                </group>
                <group name="BezierCircle_006" position={[0.016, -0.873, 0.083]} rotation={[-Math.PI / 2, 0, 0]} scale={53.529}>
                <RigidBody type="fixed">
                <PresentationControls snap={true}>
                  <group name="Sphere_006" position={[0.344, 0.93, 0.016]} rotation={[0, 0, 1.214]} scale={0.035}>
                    <mesh name="Sphere_006_Material_008_0" 
                    onPointerEnter={(e) => setText('Saturn')}
                    onPointerLeave={(e) => clear()}
                    onClick={(e) => saturnClick()} geometry={nodes.Sphere_006_Material_008_0.geometry} material={materials.Material_008} />
                  </group>
                  </PresentationControls></RigidBody>
                </group>
                <group name="BezierCircle_007" position={[0.016, -0.873, 0.083]} rotation={[-Math.PI / 2, 0, 0]} scale={63.315}>
                <RigidBody type="fixed">
                <PresentationControls snap={true}>
                  <group name="Sphere_007" position={[-0.795, 0.611, 0.013]} rotation={[0, 0, -0.016]} scale={0.02}>
                    <mesh name="Sphere_007_Material_009_0" 
                    onPointerEnter={(e) => setText('Uranus')}
                    onPointerLeave={(e) => clear()}
                    onClick={(e) => uranusClick()} geometry={nodes.Sphere_007_Material_009_0.geometry} material={materials.Material_009} />
                  </group>
                  </PresentationControls>
                  </RigidBody>
                </group>
                <group name="BezierCircle_008" position={[0.016, -0.873, 0.083]} rotation={[-Math.PI / 2, 0, 0]} scale={74.656}>
                <RigidBody type="fixed">
                <PresentationControls snap={true}>
                  <group name="Sphere_008" position={[-0.841, -0.541, 0.011]} rotation={[0, 0, -0.015]} scale={0.031}>
                    <mesh name="Sphere_008_Material_010_0" 
                    onPointerEnter={(e) => setText('Neptune')}
                    onPointerLeave={(e) => clear()}
                    onClick={(e) => neptuneClick()} geometry={nodes.Sphere_008_Material_010_0.geometry} material={materials.Material_010} />
                  </group>
                  </PresentationControls>
                  </RigidBody>
                </group>
                <group name="Lamp" position={[0.01, -0.921, 0.078]} rotation={[1.89, 0.881, -2.045]}>
                  <group name="Object_56" rotation={[Math.PI / 2, 0, 0]}>
                    <group name="Object_57" />
                  </group>
                </group>
                <group name="Lamp_001" position={[0.01, -0.921, 0.078]} rotation={[1.89, 0.881, -2.045]}>
                  <group name="Object_53" rotation={[Math.PI / 2, 0, 0]}>
                    <group name="Object_54" />
                  </group>
                </group>
                <RigidBody type="fixed">
                <PresentationControls snap={true}>
                  <group name="Sphere_001" position={[0.016, -0.873, 0.083]} rotation={[-Math.PI / 2, 0, 0]} scale={5.337}>
                    <mesh name="Sphere_001_Material_002_0"

                      onPointerEnter={(e) => setText('Sun')}
                      onPointerLeave={(e) => clear()}
                      onClick={(e) => sunClick()}
                      geometry={nodes.Sphere_001_Material_002_0.geometry} material={materials.Material_002} />
                  </group>
                </PresentationControls>
                </RigidBody>
                <group name="Sun" position={[0, 5.74, 0]}>
                  <group name="Object_50" rotation={[Math.PI / 2, 0, 0]}>
                    <group name="Object_51" />
                  </group>
                </group>
                <group name="Torus_000" rotation={[-Math.PI / 2, 0, 0]} scale={1.326}>
                  <mesh name="Torus_000_unnamed_0" geometry={nodes.Torus_000_unnamed_0.geometry} material={materials.unnamed} />
                </group>
                <group name="Torus_001" rotation={[-Math.PI / 2, 0, 0]}>
                  <mesh name="Torus_001_unnamed_0" geometry={nodes.Torus_001_unnamed_0.geometry} material={materials.unnamed} />
                </group>
                <group name="Torus_002" rotation={[-Math.PI / 2, 0, 0]} scale={1.832}>
                  <mesh name="Torus_002_unnamed_0" geometry={nodes.Torus_002_unnamed_0.geometry} material={materials.unnamed} />
                </group>
                <group name="Torus_003" rotation={[-Math.PI / 2, 0, 0]} scale={2.51}>
                  <mesh name="Torus_003_unnamed_0" geometry={nodes.Torus_003_unnamed_0.geometry} material={materials.unnamed} />
                </group>
                <group name="Torus_004" rotation={[-Math.PI / 2, 0, 0]} scale={3.485}>
                  <mesh name="Torus_004_unnamed_0" geometry={nodes.Torus_004_unnamed_0.geometry} material={materials.unnamed} />
                </group>
                <group name="Torus_005" rotation={[-Math.PI / 2, 0, 0]} scale={4.531}>
                  <mesh name="Torus_005_unnamed_0" geometry={nodes.Torus_005_unnamed_0.geometry} material={materials.unnamed} />
                </group>
                <group name="Torus_006" rotation={[-Math.PI / 2, 0, 0]} scale={5.361}>
                  <mesh name="Torus_006_unnamed_0" geometry={nodes.Torus_006_unnamed_0.geometry} material={materials.unnamed} />
                </group>
                <group name="Torus_007" rotation={[-Math.PI / 2, 0, 0]} scale={6.317}>
                  <mesh name="Torus_007_unnamed_0" geometry={nodes.Torus_007_unnamed_0.geometry} material={materials.unnamed} />
                </group>
              </group>
            </group>
          </group>
        </group>
      </group>
    </group>
    </>
  )
}

useGLTF.preload('/solarsytem.glb')