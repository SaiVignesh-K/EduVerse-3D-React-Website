/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.2.14 digestiveRoom.glb 
*/

import React, { useRef } from 'react'
import { useGLTF } from '@react-three/drei'
import { RigidBody } from '@react-three/rapier'
import { useSharedState } from './sharedState';
import { PresentationControls } from '@react-three/drei';

export function DigestiveRoom(props) {
  const { setText, setDesc } = useSharedState();

  function clear() {
    setText('');
    setDesc('');
  }

  function intestineClick() {
    setDesc("The small intestine is a vital organ in the digestive system, situated between the stomach and the large intestine. It is where most of the digestion and nutrient absorption occur. With its long, coiled structure, the small intestine utilizes enzymes and beneficial bacteria to break down food particles, extracting essential nutrients for absorption into the bloodstream.");
  }
  function LargeintestineClick() {
    setDesc("The large intestine, also known as the colon, is part of the digestive system located after the small intestine. It absorbs water and electrolytes from undigested food, forming feces for elimination. Beneficial bacteria in the colon break down remaining nutrients and produce certain vitamins. It plays a key role in waste management and maintaining water balance.");
  }

  function liverClick() {
    setDesc("The Liver and Its Functions. The liver is the largest solid organ in the body. It removes toxins from the body's blood supply, maintains healthy blood sugar levels, regulates blood clotting, and performs hundreds of other vital functions. It is located beneath the rib cage in the right upper abdomen");
  }
  function GallBladderClick() {
    setDesc("The gallbladder is a small, pear-shaped organ located just below the liver. It functions as a storage reservoir for bile, a digestive fluid produced by the liver. When you consume fatty foods, the gallbladder contracts and releases bile into the small intestine to help with the digestion and absorption of fats. The gallbladder is not essential for survival, but it plays a crucial role in the digestive process.");
  }
  function HepaticArteryClick() {
    setDesc("The hepatic artery is a vital blood vessel that supplies oxygenated blood to the liver. It branches off from the abdominal aorta and ensures that the liver receives a constant supply of oxygen and nutrients. This oxygenated blood is necessary for the liver to carry out its various functions, including detoxification, metabolism, and the production of proteins and enzymes.");
  }
  function InferiorVenaCavaClick() {
    setDesc("The inferior vena cava (IVC) is the largest vein in the human body. It carries deoxygenated blood from the lower half of the body back to the heart's right atrium. The blood is then pumped into the lungs for oxygenation and then returned to the left side of the heart for distribution to the rest of the body. The IVC plays a crucial role in the circulation of deoxygenated blood and is a key component of the circulatory system.");
  }
  function stomachClick() {
    setDesc("The stomach is a muscular organ in the digestive system located between the esophagus and the small intestine. It plays a crucial role in breaking down food into a semi-liquid state through muscular contractions and gastric juices. This partially digested food then moves to the small intestine for further digestion and nutrient absorption.");
  }
  function teethClick() {
    setDesc("Teeth are hard, calcified structures in the mouth used for chewing and breaking down food during the digestive process. Humans typically have two sets of teeth: primary (baby) and permanent (adult) teeth. Each type has different functions, aiding in speech, facial structure, and overall oral health. Proper dental care is essential for maintaining healthy teeth and gums.");
  }
  function gumClick() {
    setDesc("Gums, or gingiva, are soft, pink tissues surrounding teeth, providing support and protection for dental roots. They seal teeth, anchoring them in place while acting as a barrier against bacteria. Healthy gums are essential for oral well-being, preventing tooth decay and gum diseases like gingivitis. Regular dental hygiene helps maintain gum health.");
  }


  const { nodes, materials } = useGLTF('/digestiveRoom.glb')
  return (
    <group {...props} dispose={null} scale={1.5} position={[65, -15, -15]}>
      <RigidBody type="fixed" >
        <group position={[-33.949, -0.481, 16.738]} rotation={[Math.PI, -0.535, Math.PI]}>
          <mesh geometry={nodes.Object_17.geometry} material={materials.Struktur_W} />
          <mesh geometry={nodes.Object_18.geometry} material={materials.Chrom} />
          <mesh geometry={nodes.Object_19.geometry} material={materials.sehr_helles_warmes_Licht} />
        </group>
        <group position={[-63.316, -0.481, 0.218]} rotation={[-Math.PI, 1.56, -Math.PI]}>
          <mesh geometry={nodes.Object_21.geometry} material={materials.Struktur_W} />
          <mesh geometry={nodes.Object_22.geometry} material={materials.Chrom} />
          <mesh geometry={nodes.Object_23.geometry} material={materials.sehr_helles_warmes_Licht} />
        </group>
        <group position={[-34.326, -0.481, -16.955]} rotation={[0, -0.512, 0]}>
          <mesh geometry={nodes.Object_25.geometry} material={materials.Struktur_W} />
          <mesh geometry={nodes.Object_26.geometry} material={materials.Chrom} />
          <mesh geometry={nodes.Object_27.geometry} material={materials.sehr_helles_warmes_Licht} />
        </group>
        <group position={[0, 2.268, 0]} scale={[0.951, 1, 1]}>
          <mesh geometry={nodes.Object_37.geometry} material={materials.Struktur_W} position={[0, 0.889, 0]} />
        </group>
        <group position={[-43.864, 0.24, 0]}>
          <mesh geometry={nodes.Object_47.geometry} material={materials.Struktur_W} />
          <mesh geometry={nodes.Object_48.geometry} material={materials['Material.002']} />
          <mesh geometry={nodes.Object_49.geometry} material={materials.Licht} />
        </group>
      </RigidBody>
      <group position={[-43.643, -0.15, 0]}>
        <mesh geometry={nodes.Object_59.geometry} material={materials['Material.001']} />
        <mesh geometry={nodes.Object_60.geometry} material={materials.Gummi_S} />
        <mesh geometry={nodes.Object_61.geometry} material={materials.Chrom} />
        <RigidBody type="fixed" colliders="trimesh">
          <mesh geometry={nodes.Object_62.geometry} material={materials.Glass_Fenster} />
        </RigidBody>
        <mesh geometry={nodes.Object_63.geometry} material={materials.Licht} />
        <mesh geometry={nodes.Object_64.geometry} material={materials.Stein} />
        <mesh geometry={nodes.Object_65.geometry} material={materials.warmes_Licht} />
      </group>
      <RigidBody type="fixed" >
        <group position={[-55.474, -2.723, 0]} rotation={[-Math.PI, 0, -Math.PI]} scale={[1.266, 1.332, 1.332]} />
        <mesh geometry={nodes.Object_15.geometry} material={materials.Beton} position={[-43.864, -0.502, 0]} scale={1.028} />
        <group position={[-43.619, 0.656, -0.219]} rotation={[-Math.PI / 2, 0, 0.023]} scale={3.251}>
          <group rotation={[Math.PI / 2, 0, 0]}>
            <group rotation={[-Math.PI, 0, -Math.PI]}>
              <mesh geometry={nodes.Object_5002.geometry} material={materials.StingrayPBS1} />
              <mesh geometry={nodes.Object_7002.geometry} material={materials.StingrayPBS5} />
            </group>
            <mesh geometry={nodes.Object_10001.geometry} material={materials.StingrayPBS4} />
            <mesh geometry={nodes.Object_11001.geometry} material={materials.StingrayPBS2} />
            <mesh geometry={nodes.Object_9.geometry} material={materials.StingrayPBS3} />
          </group>
        </group>
        <group position={[-58.764, 1.967, -11.114]} rotation={[-Math.PI / 2, 0, 2.376]} scale={28.082}>
          <PresentationControls snap={true}>
            <group rotation={[Math.PI / 2, 0, 0]} scale={0.01}>
              <group position={[0, 4.314, 0]} scale={4.685}>
                <mesh
                  onPointerEnter={(e) => setText('Stomach')}
                  onPointerLeave={(e) => clear()}
                  onClick={(e) => stomachClick()}
                  geometry={nodes.LAMBUNG_phong1_0.geometry} material={materials.phong1} />
                <mesh
                  onPointerEnter={(e) => setText('Stomach')}
                  onPointerLeave={(e) => clear()}
                  onClick={(e) => stomachClick()}
                  geometry={nodes.LAMBUNG_phong1_0001.geometry} material={materials.phong1} />
                <mesh
                  onPointerEnter={(e) => setText('Stomach')}
                  onPointerLeave={(e) => clear()}
                  onClick={(e) => stomachClick()}
                  geometry={nodes.LAMBUNG_phong1_0002.geometry} material={materials.phong1} />
              </group>
            </group>
          </PresentationControls>
        </group>
        <group position={[-34.559, 3.373, -14.406]} rotation={[-Math.PI / 2, 0, -2.427]} scale={0.216}>
          <PresentationControls snap={true}>
            <group rotation={[Math.PI / 2, 0, 0]}>
              <group rotation={[-Math.PI / 2, 0, 0]} scale={6.5}>
                <mesh
                  onPointerEnter={(e) => setText('Liver')}
                  onPointerLeave={(e) => clear()}
                  onClick={(e) => liverClick()}
                  geometry={nodes.liver001_Material011_0.geometry} material={materials['Material.011']} position={[-0.6, 0.838, 0]} />
              </group>
              <mesh
                onPointerEnter={(e) => setText('Gall Bladder')}
                onPointerLeave={(e) => clear()}
                onClick={(e) => GallBladderClick()}
                geometry={nodes.gallbladder002_Material013_0.geometry} material={materials['Material.013']} position={[0.239, -2.604, 1.254]} rotation={[-1.99, -0.69, 2.815]} scale={6.5} />
              <mesh
                onPointerEnter={(e) => setText('Hepatic Artery')}
                onPointerLeave={(e) => clear()}
                onClick={(e) => HepaticArteryClick()}
                geometry={nodes.hepatic_artery001_Material_0.geometry} material={materials['Material.004']} position={[-0.994, -1.083, -0.682]} rotation={[-0.466, 0.813, -0.145]} scale={6.5} />
              <mesh
                onPointerEnter={(e) => setText('Inferior Vena Cava')}
                onPointerLeave={(e) => clear()}
                onClick={(e) => InferiorVenaCavaClick()}
                geometry={nodes.inferior_vena_cava001_Material012_0.geometry} material={materials['Material.012']} position={[-3.015, 7.079, 0.119]} rotation={[-1.571, -0.136, 0.001]} scale={6.5} />
              <mesh
                geometry={nodes.portal_vein001_Material015_0.geometry} material={materials['Material.015']} position={[-1.62, -0.041, -0.349]} rotation={[-1.788, 1.051, -0.026]} scale={6.5} />
            </group>
          </PresentationControls>
        </group>
        <group position={[-58.356, 3.514, 10.022]} rotation={[-Math.PI / 2, 0, 2]} scale={0.092}>
          <group rotation={[Math.PI / 2, 0, 0]}>
            <group position={[15.286, 3.827, -1.997]} scale={0.1}>
              <PresentationControls snap={true}>
                <mesh
                  onPointerEnter={(e) => setText('Large intestine')}
                  onPointerLeave={(e) => clear()}
                  onClick={(e) => LargeintestineClick()}
                  geometry={nodes.Tjocktarm_Default_Material_0.geometry} material={materials.Default_Material} />
                <mesh
                  onPointerEnter={(e) => setText('Large intestine')}
                  onPointerLeave={(e) => clear()}
                  onClick={(e) => LargeintestineClick()}
                  geometry={nodes.Tjocktarm_Default_Material_0001.geometry} material={materials.Default_Material} />
              </PresentationControls>
            </group>

            <group position={[14.166, 10.696, 1.169]} scale={0.1}>
              <PresentationControls snap={true}>
                <mesh
                  onPointerEnter={(e) => setText('Small intestine')}
                  onPointerLeave={(e) => clear()}
                  onClick={(e) => intestineClick()}
                  geometry={nodes.Tunntarm_Default_Material_0.geometry} material={materials.Default_Material_0} position={[0, 0, -0.001]} />
              </PresentationControls>
            </group>
          </group>
        </group>
        <group position={[-33.678, 6.865, 15.405]} rotation={[-Math.PI / 2, 0, -2.545]} scale={2.195}>
          <group rotation={[Math.PI / 2, 0, 0]}>
            <PresentationControls snap={true}>
              <mesh
                onPointerEnter={(e) => setText('Teeth')}
                onPointerLeave={(e) => clear()}
                onClick={(e) => teethClick()}
                geometry={nodes.Low_Teeth25_Low_Teeth25_0001.geometry} material={materials['Low_Teeth25.001']} />
            </PresentationControls>
            <PresentationControls snap={true}>
              <mesh
                onPointerEnter={(e) => setText('Gums')}
                onPointerLeave={(e) => clear()}
                onClick={(e) => gumClick()}
                geometry={nodes.Low_Teeth27_Low_Teeth27_0001.geometry} material={materials['Low_Teeth27.001']} />
            </PresentationControls>
          </group>
        </group>
        <mesh geometry={nodes.Cube.geometry} material={materials['Material.009']} position={[-38.447, 3.729, 17.812]} rotation={[1.571, 0.006, 2.981]} />
        <mesh geometry={nodes.Plane001.geometry} material={materials['Material.010']} position={[-38.479, 3.764, 17.716]} rotation={[-1.571, -0.006, 0.16]} scale={[-1.731, -1, -2.467]} />
        <mesh geometry={nodes.Cube001.geometry} material={materials['Material.009']} position={[-61.972, 3.808, -6.931]} rotation={[Math.PI / 2, 0, -1.259]} />
        <mesh geometry={nodes.Plane003.geometry} material={materials['Material.014']} position={[-61.97, 3.782, -6.948]} rotation={[-Math.PI / 2, 0, -1.883]} scale={[-1.905, -1.1, -2.714]} />
        <mesh geometry={nodes.Plane002.geometry} material={materials['Material.016']} position={[-27.647, 3.1, -10.507]} rotation={[-Math.PI / 2, 0, 2.323]} scale={[-1.731, -1, -2.467]} />
        <mesh geometry={nodes.Cube002.geometry} material={materials['Material.017']} position={[-27.66, 3.126, -10.516]} rotation={[Math.PI / 2, 0, 0.824]} />
        <mesh geometry={nodes.Plane004.geometry} material={materials['Material.018']} position={[-56.767, 3.222, 13.636]} rotation={[-Math.PI / 2, 0, -0.744]} scale={[-2.597, -1, -2.467]} />
        <mesh geometry={nodes.Cube003.geometry} material={materials['Material.019']} position={[-56.753, 3.248, 13.644]} rotation={[Math.PI / 2, 0, -2.404]} />
        <mesh geometry={nodes.Text.geometry} position={[-55.807, 0.667, -17.463]} rotation={[Math.PI / 2, 0, 0]} scale={2.957} />
        <mesh geometry={nodes.Cube005.geometry} material={nodes.Cube005.material} position={[-43.913, -0.053, 0.172]} rotation={[-Math.PI, 0, -Math.PI]} scale={[-0.894, -0.099, -0.894]} />
        <mesh geometry={nodes.Cube006.geometry} material={materials['Material.003']} position={[-21.973, 2.97, -1.853]} rotation={[-0.565, 0, -1.454]} scale={[1.518, 1.02, 1.349]} />
        <mesh geometry={nodes.Text001.geometry} material={materials['Material.022']} position={[-23.172, 5.722, -1.176]} rotation={[1.587, 0.018, 1.571]} scale={1.324} />
        <RigidBody type="fixed" sensor onIntersectionEnter={() => { console.log("jkn"); window.location.href = '/CorridorBiology'; }}>
          <mesh geometry={nodes.Torus.geometry} material={materials['Material.005']} position={[-28.696, 0.545, -0.029]} scale={1.144} />
        </RigidBody>
      </RigidBody>
    </group>
  )
}

useGLTF.preload('/digestiveRoom.glb')
